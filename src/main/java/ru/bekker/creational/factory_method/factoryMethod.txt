Фабричный метод (Виртуальный конструктор)
      Когда используется фабричный метод?

Единая точка создания объектов в зависимости от входящего параметра.

{
    * Когда известен интерфейс, но заранее неизвестно какая из реализаций будет использоваться
    * Получение ссылки на объект в зависимости от входящих условий.
    В програмном коде не создаётся напрямую экземпляр класса, мы это делегируем в специальный метод
    и в зависимости от условий этот метод возвращает нужную ссылку
}
Участники: Создатель -> Конкретный создатель -> Продукт -> Конкретный продукт
    1. Общий интерфейс объектов, которые будет производить фабричный метод
    2. Конкретные объекты, реализующие интерфейс
    3. Объект-фабрика с фабричным методом, создающий объекты через общий интерфейс.
        Фабричный метод может быть абстрактным
    4. Конкретные создатели по-своему реализуют фабричный метод, производя те или иные объекты.
        Не обязательно каждый раз возвращать новые объекты, можно возвращать существующие из кеша.

Применимость:
    1. Заранее неизвестны типы и зависимости объектов, с которыми будет работать код
    2. Дать возможность пользователям расширять части фреймворка или библиотеки
    3. Повторное использование созданных объектов

Преимущества и недостатки:
    + Избавляет код от привязки к конкретным классам
    + Выделяет код производства продуктов в одно место, упрощая поддержку
    + Упрощает добавление новых продуктов в программу
    + Реализует принцип открытости/закрытости
    - Может привести к созданию параллельных иерархий классов, для каждого класса объектв нужен класс создателя




